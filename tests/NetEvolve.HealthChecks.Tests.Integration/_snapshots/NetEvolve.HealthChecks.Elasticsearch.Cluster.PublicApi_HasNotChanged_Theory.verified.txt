namespace NetEvolve.HealthChecks.Elasticsearch.Cluster
{
    public static class DependencyInjectionExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddElasticsearchCluster([System.Diagnostics.CodeAnalysis.NotNull] this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, [System.Diagnostics.CodeAnalysis.NotNull] string name, System.Action<NetEvolve.HealthChecks.Elasticsearch.Cluster.ElasticsearchClusterOptions>? options = null, params string[] tags) { }
    }
    public enum ElasticsearchClusterClientCreationMode
    {
        ServiceProvider = 0,
        Internal = 1,
    }
    public sealed class ElasticsearchClusterOptions : System.IEquatable<NetEvolve.HealthChecks.Elasticsearch.Cluster.ElasticsearchClusterOptions>
    {
        public ElasticsearchClusterOptions() { }
        public System.Func<Elastic.Clients.Elasticsearch.ElasticsearchClient, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>> CommandAsync { get; }
        public System.Collections.Generic.IEnumerable<string>? ConnectionStrings { get; set; }
        public string? KeyedService { get; set; }
        public NetEvolve.HealthChecks.Elasticsearch.Cluster.ElasticsearchClusterClientCreationMode Mode { get; set; }
        public string? Password { get; set; }
        public int Timeout { get; set; }
        public string? Username { get; set; }
    }
}